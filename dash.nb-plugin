#!/usr/bin/env bash
###############################################################################
# dash.nb-plugin
#
# Counts [x] completed and [ ] incomplete tasks across notes in the current notebook.
# Groups results by directory.
#
# Author: austinkmassey (https://github.com/austinkmassey)
#
# A plugin for `nb`.
#   https://github.com/xwmx/nb
###############################################################################

# Add the new subcommand
_subcommands add "dash"

# Describe the plugin
_subcommands describe "dash" <<HEREDOC
Usage: nb dash

Count [x] completed and [ ] incomplete tasks across all notes.
Displays results grouped by directory.
HEREDOC

_dash() {
  search_dir=$(_notebooks current --path)

  # Read results of `find` into an array
  mapfile -t files < <(find "$search_dir" -type f -name "*.todo.md")

  results=""

  echo "Found ${#files[@]} todo.md files" >&2

  for file in "${files[@]}"; do
    [[ -f "$file" ]] || continue
    dir=$(dirname "$file")
    #completed=$(grep -o "\[x\]" "$file" 2>/dev/null | wc -l || echo 0)
    if matches=$(grep -s -o "\[x\]" "$file" 2>/dev/null); then
      completed=$(wc -l <<<"$matches")
    else
      completed=0
    fi

    #incomplete=$(grep -o "\[ \]" "$file" 2>/dev/null | wc -l || echo 0)
    if matches=$(grep -s -o "\[ \]" "$file" 2>/dev/null); then
      incomplete=$(wc -l <<<"$matches")
    else
      incomplete=0
    fi
    results+="$dir|$completed|$incomplete"$'\n'
  done

  # Pipe the result block to awk
  printf "%s" "$results" | awk -F'|' '
  {
    completed[$1] += $2
    incomplete[$1] += $3
  }
  END {
    printf "%-40s %10s %10s\n", "Directory", "Completed", "Incomplete"
    for (d in completed) {
      printf "%-40s %10d %10d\n", d, completed[d], incomplete[d]
    }
  }'
}
